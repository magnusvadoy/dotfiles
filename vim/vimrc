"""""""""""""""""""""""""""""""""""""""""""""
"""     a vimrc file
"""     (c) many people on GitHub
"""""""""""""""""""""""""""""""""""""""""""""

set nocompatible              " be iMproved, required
filetype off                  " required

""" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

""" Plugins
Plugin 'VundleVim/Vundle.vim'
Plugin 'sickill/vim-monokai'
" Plugin 'tpope/vim-fugitive'
" Plugin 'scrooloose/nerdtree'
" Plugin 'tomtom/tcomment_vim'
" Plugin 'cakebaker/scss-syntax.vim'
" Plugin 'plasticboy/vim-markdown'
" Plugin 'kien/ctrlp.vim'

call vundle#end()
filetype plugin indent on
set shell=/bin/bash

""" General
set number                      " Show line numbers
set laststatus=2                " Always show the statusline
set encoding=utf-8              " Necessary to show Unicode glyphs
set backspace=indent,eol,start	" backspace for dummys
set linespace=0					" No extra spaces between rows
set showmatch					" show matching brackets/parenthesis
set incsearch					" find as you type search
set hlsearch					" highlight search terms
set winminheight=0				" windows can be 0 line high
set ignorecase					" case insensitive search
set smartcase					" case sensitive when uc present
set wildmenu					" show list instead of just completing
set wildmode=list:longest,full	" command <Tab> completion, list matches, then longest common part, then all.
set whichwrap=b,s,h,l,<,>,[,]	" backspace and cursor keys wrap to
set scrolljump=5 				" lines to scroll when cursor leaves screen
set scrolloff=3 				" minimum lines to keep above and below cursor
set foldenable  				" auto fold code

syntax on
colorscheme monokai
set cursorline  				" highlight current line
" set guifont=Menlo:h14

"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
" if (empty($TMUX))
"  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
"    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
"  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
"  if (has("termguicolors"))
"    set termguicolors
"  endif
"endif

if has('cmdline_info')
	set ruler                  	" show the ruler
	set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
	set showcmd                	" show partial commands in status line and
endif

""" Formatting
set nowrap                     	" wrap long lines
set autoindent                 	" indent at the same level of the previous line
set shiftwidth=2               	" use indents of 4 spaces
set expandtab 	  	     		" tabs are spaces, not tabs
set tabstop=2 					" an indentation every four columns
set softtabstop=2 				" let backspace delete indent
" set pastetoggle=<F12>          	" pastetoggle (sane indentation on pastes)
set noexpandtab


""" Key Mappings

" Map leader to ','
let mapleader = ','

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Map NERDTree to F2
nmap <silent> <F2> :NERDTreeToggle<CR>

""" Filetypes
au BufRead,BufNewFile *.scss set filetype=scss

" automatically reload vimrc when it's saved
augroup AutoReloadVimRC
  au!
  au BufWritePost $MYVIMRC so $MYVIMRC
augroup END
