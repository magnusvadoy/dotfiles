#!/bin/bash

version=$1
append_hash=false
push_tag=false
copy_to_clipboard=false

# Function to display the script usage
print_usage() {
  echo "Usage: tag [options] [version]"
  echo "Options:"
  echo "  -a, --append-hash     Append the current commit hash to the version"
  echo "  -p, --push            Push the newly created tag to the remote repository"
  echo "  -c, --copy            Copy the tag to the clipboard"
}

# Parse command line options
while [[ "$#" -gt 0 ]]; do
  case $1 in
  -a | --append-hash)
    append_hash=true
    ;;
  -p | --push)
    push_tag=true
    ;;
  -c | --copy)
    copy_to_clipboard=true
    ;;
  *)
    version=$1
    ;;
  esac
  shift
done

# Check if a version is provided
if [[ -z "$version" ]]; then
  print_usage
  exit 1
fi

# Append git commit hash of HEAD to version if the flag is set
if [ "$append_hash" = true ]; then
  git_head=$(git rev-parse --short HEAD 2>/dev/null)
  if [[ -n "$git_head" ]]; then
    version="$version-$git_head"
  else
    echo "Failed to get commit hash"
    exit 1
  fi
fi

# Tag the Git repository
git tag -a "$version" -m "Version $version" 2>/dev/null
if [[ $? -eq 0 ]]; then
  echo "Tagged commit with version $version successfully."

  # Push the tag if the flag is set
  if [ "$push_tag" = true ]; then
    git push origin "$version" 2>/dev/null
    if [[ $? -eq 0 ]]; then
      echo "Pushed tag $version to remote repository."
    else
      echo "Failed to push tag $version to remote repository."
      exit 1
    fi
  fi

  # Copy the tag to clipboard if the flag is set
  if [ "$copy_to_clipboard" = true ]; then
    if command -v pbcopy &>/dev/null; then
      echo -n "$version" | pbcopy
      echo "Copied tag $version to clipboard."
    elif command -v xclip &>/dev/null; then
      echo -n "$version" | xclip -selection clipboard
      echo "Copied tag $version to clipboard."
    else
      echo "Unable to copy to clipboard. Neither pbcopy nor xclip is available."
    fi
  fi
else
  echo "Failed to tag commit. Check if you are inside a Git repository."
  exit 1
fi
